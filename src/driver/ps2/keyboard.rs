use super::control::{test_status_now, Status};
use crate::raw_io::pmio::Port;
use crate::input::key_event::{Code, KeyState, PrintVar, ModVar, Key, KeyEvent};

static KEYBOARD_PORT: Port = Port::new(0x60);

const CODE_PAGE2: u8 = 0xe0;
const PAUSE: u8 = 0xe1;

const PRINT_SCREEN_PRESS: u8 = 0x2a;
const PRINT_SCREEN_RELEASE: u8 = 0xb7;

pub fn available() -> bool {
	test_status_now(Status::OBF)
}

pub fn get_raw_scancode() -> Option<u8> {
	if available() {
		Some(KEYBOARD_PORT.read_byte())
	} else {
		None
	}
}

pub fn wait_raw_scancode() -> u8 {
	loop {
		match get_raw_scancode() {
			Some(c) => return c,
			None => continue,
		}
	}
}

fn ignore_scancodes(seq: &[u8]) {
	for byte in seq {
		let code = get_raw_scancode().expect("buffer excedeed before end of scancodes.");

		if *byte != code {
			panic!("scancode mismatch. expected={byte}, got={code}");
		}
	}
}

fn get_pause_keyevent() -> KeyEvent {
	ignore_scancodes(&[0x1D, 0x45, 0xE1, 0x9D, 0xC5]);

	KeyEvent {
		state: KeyState::Pressed,
		key: Key::Control(Code::Pause),
	}
}

fn get_print_screen_press_keyevent() -> KeyEvent {
	ignore_scancodes(&[0xE0, 0x37]);

	KeyEvent {
		state: KeyState::Pressed,
		key: Key::Control(Code::PrintScreen),
	}
}

fn get_print_screen_release_keyevent() -> KeyEvent {
	ignore_scancodes(&[0xE0, 0xAA]);

	KeyEvent {
		state: KeyState::Released,
		key: Key::Control(Code::PrintScreen),
	}
}

fn scancode_to_keyevent(page: usize, code: u8) -> KeyEvent {
	let state = match (code & 128) != 0 {
		true => KeyState::Released,
		false => KeyState::Pressed,
	};

	let key = SCAN_CODE_SET1[page][(code & !128) as usize];

	KeyEvent {
		state,
		key,
	}
}

pub fn wait_key_event() -> KeyEvent {
	loop {
		match get_key_event() {
			Some(ev) => return ev,
			None => continue,
		}
	}
}

/// Get current key event.
/// 
/// if there is no available event, then returns None.
pub fn get_key_event() -> Option<KeyEvent> {
	let raw_scancode = get_raw_scancode();

	let mut raw_scancode = match raw_scancode {
		Some(v) => v,
		None => return None,
	};

	let page = match raw_scancode {
		PAUSE => return Some(get_pause_keyevent()),
		CODE_PAGE2 => {
			raw_scancode = get_raw_scancode().expect("buffer excedeed before end of scancodes.");

			match raw_scancode {
				PRINT_SCREEN_PRESS => return Some(get_print_screen_press_keyevent()),
				PRINT_SCREEN_RELEASE => return Some(get_print_screen_release_keyevent()),
				_ => 1,
			}
		}
		_ => 0,
	};

	Some(scancode_to_keyevent(page, raw_scancode))
}

/// PS/2 SCAN CODE SET 1 to `Key` translate table.
/// 
/// - SCAN_CODE_SET1\[0\] -> table for **not** starting with 0xe0
/// - SCAN_CODE_SET1\[1\] -> table for starting with 0xe0
/// 
/// **Generated by script. do not touch manually.**
static SCAN_CODE_SET1: [[Key; 128]; 2] = [
    [
        Key::Unknown,
        Key::Control(Code::Escape),
        Key::Printable(Code::N1, PrintVar::Regular),
        Key::Printable(Code::N2, PrintVar::Regular),
        Key::Printable(Code::N3, PrintVar::Regular),
        Key::Printable(Code::N4, PrintVar::Regular),
        Key::Printable(Code::N5, PrintVar::Regular),
        Key::Printable(Code::N6, PrintVar::Regular),
        Key::Printable(Code::N7, PrintVar::Regular),
        Key::Printable(Code::N8, PrintVar::Regular),
        Key::Printable(Code::N9, PrintVar::Regular),
        Key::Printable(Code::N0, PrintVar::Regular),
        Key::Printable(Code::Minus, PrintVar::Regular),
        Key::Printable(Code::Equal, PrintVar::Regular),
        Key::Control(Code::Backspace),
        Key::Control(Code::Tab),
        Key::Printable(Code::Q, PrintVar::Regular),
        Key::Printable(Code::W, PrintVar::Regular),
        Key::Printable(Code::E, PrintVar::Regular),
        Key::Printable(Code::R, PrintVar::Regular),
        Key::Printable(Code::T, PrintVar::Regular),
        Key::Printable(Code::Y, PrintVar::Regular),
        Key::Printable(Code::U, PrintVar::Regular),
        Key::Printable(Code::I, PrintVar::Regular),
        Key::Printable(Code::O, PrintVar::Regular),
        Key::Printable(Code::P, PrintVar::Regular),
        Key::Printable(Code::BracketOpen, PrintVar::Regular),
        Key::Printable(Code::BracketClose, PrintVar::Regular),
        Key::Control(Code::Enter),
        Key::Modifier(Code::Control, ModVar::Left),
        Key::Printable(Code::A, PrintVar::Regular),
        Key::Printable(Code::S, PrintVar::Regular),
        Key::Printable(Code::D, PrintVar::Regular),
        Key::Printable(Code::F, PrintVar::Regular),
        Key::Printable(Code::G, PrintVar::Regular),
        Key::Printable(Code::H, PrintVar::Regular),
        Key::Printable(Code::J, PrintVar::Regular),
        Key::Printable(Code::K, PrintVar::Regular),
        Key::Printable(Code::L, PrintVar::Regular),
        Key::Printable(Code::Semicolon, PrintVar::Regular),
        Key::Printable(Code::SingleQuote, PrintVar::Regular),
        Key::Printable(Code::Backtick, PrintVar::Regular),
        Key::Modifier(Code::Shift, ModVar::Left),
        Key::Printable(Code::Backslash, PrintVar::Regular),
        Key::Printable(Code::Z, PrintVar::Regular),
        Key::Printable(Code::X, PrintVar::Regular),
        Key::Printable(Code::C, PrintVar::Regular),
        Key::Printable(Code::V, PrintVar::Regular),
        Key::Printable(Code::B, PrintVar::Regular),
        Key::Printable(Code::N, PrintVar::Regular),
        Key::Printable(Code::M, PrintVar::Regular),
        Key::Printable(Code::Comma, PrintVar::Regular),
        Key::Printable(Code::Dot, PrintVar::Regular),
        Key::Printable(Code::Slash, PrintVar::Regular),
        Key::Modifier(Code::Shift, ModVar::Right),
        Key::Printable(Code::Asterisk, PrintVar::Keypad),
        Key::Modifier(Code::Alt, ModVar::Left),
        Key::Control(Code::Space),
        Key::Toggle(Code::Capslock),
        Key::Control(Code::F1),
        Key::Control(Code::F2),
        Key::Control(Code::F3),
        Key::Control(Code::F4),
        Key::Control(Code::F5),
        Key::Control(Code::F6),
        Key::Control(Code::F7),
        Key::Control(Code::F8),
        Key::Control(Code::F9),
        Key::Control(Code::F10),
        Key::Toggle(Code::Numberlock),
        Key::Toggle(Code::Scrolllock),
        Key::Printable(Code::N7, PrintVar::Keypad),
        Key::Printable(Code::N8, PrintVar::Keypad),
        Key::Printable(Code::N9, PrintVar::Keypad),
        Key::Printable(Code::Minus, PrintVar::Keypad),
        Key::Printable(Code::N4, PrintVar::Keypad),
        Key::Printable(Code::N5, PrintVar::Keypad),
        Key::Printable(Code::N6, PrintVar::Keypad),
        Key::Printable(Code::Plus, PrintVar::Keypad),
        Key::Printable(Code::N1, PrintVar::Keypad),
        Key::Printable(Code::N2, PrintVar::Keypad),
        Key::Printable(Code::N3, PrintVar::Keypad),
        Key::Printable(Code::N0, PrintVar::Keypad),
        Key::Printable(Code::Dot, PrintVar::Keypad),
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Control(Code::F11),
        Key::Control(Code::F12),
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
    ],
    [
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Media(Code::PreviousTrack),
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Media(Code::NextTrack),
        Key::Unknown,
        Key::Unknown,
        Key::Control(Code::Enter),
        Key::Modifier(Code::Control, ModVar::Right),
        Key::Unknown,
        Key::Unknown,
        Key::Media(Code::Mute),
        Key::Media(Code::Calculator),
        Key::Media(Code::Play),
        Key::Unknown,
        Key::Media(Code::Stop),
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Media(Code::VolumeDown),
        Key::Unknown,
        Key::Media(Code::VolumeUp),
        Key::Unknown,
        Key::Media(Code::WwwHome),
        Key::Unknown,
        Key::Unknown,
        Key::Printable(Code::Slash, PrintVar::Keypad),
        Key::Unknown,
        Key::Unknown,
        Key::Modifier(Code::Alt, ModVar::Right),
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Control(Code::Home),
        Key::Control(Code::ArrowUp),
        Key::Control(Code::PageUp),
        Key::Unknown,
        Key::Control(Code::ArrowLeft),
        Key::Unknown,
        Key::Control(Code::ArrowRight),
        Key::Unknown,
        Key::Control(Code::End),
        Key::Control(Code::ArrowDown),
        Key::Control(Code::PageDown),
        Key::Control(Code::Insert),
        Key::Control(Code::Delete),
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Modifier(Code::Gui, ModVar::Left),
        Key::Modifier(Code::Gui, ModVar::Right),
        Key::Media(Code::Apps),
        Key::Acpi(Code::Power),
        Key::Acpi(Code::Sleep),
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Acpi(Code::Wake),
        Key::Unknown,
        Key::Media(Code::WwwSearch),
        Key::Media(Code::WwwFavorites),
        Key::Media(Code::WwwRefresh),
        Key::Media(Code::WwwStop),
        Key::Media(Code::WwwForward),
        Key::Media(Code::WwwBack),
        Key::Media(Code::MyComputer),
        Key::Media(Code::Email),
        Key::Media(Code::Select),
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
        Key::Unknown,
    ],
];
